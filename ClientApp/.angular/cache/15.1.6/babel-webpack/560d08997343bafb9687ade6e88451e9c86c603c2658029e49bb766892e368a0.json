{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../hero.service\";\nexport class AddHeroComponent {\n  constructor(fb, heroService) {\n    this.fb = fb;\n    this.heroService = heroService;\n    this.heroForm = this.fb.group({\n      name: ['', Validators.required],\n      alias: [''],\n      brandId: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.heroForm.valid) {\n      const heroData = this.heroForm.value;\n      this.heroService.addHero(heroData).subscribe(id => {\n        console.log(`Hero added with ID: ${id}`);\n        // Optionally, navigate to the hero list or perform other actions.\n      }, error => {\n        console.error('Error adding hero:', error);\n      });\n    }\n  }\n}\nAddHeroComponent.ɵfac = function AddHeroComponent_Factory(t) {\n  return new (t || AddHeroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HeroService));\n};\nAddHeroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddHeroComponent,\n  selectors: [[\"app-add-hero\"]],\n  decls: 14,\n  vars: 3,\n  consts: [[\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"alias\"], [\"type\", \"text\", \"id\", \"alias\", \"name\", \"alias\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"brand\"], [\"id\", \"brand\", \"name\", \"brandId\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"1\"], [\"type\", \"button\", 3, \"click\"]],\n  template: function AddHeroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"label\", 0);\n      i0.ɵɵtext(2, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function AddHeroComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.model.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Alias:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AddHeroComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.model.alias = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Brand:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"select\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AddHeroComponent_Template_select_ngModelChange_9_listener($event) {\n        return ctx.model.brandId = $event;\n      });\n      i0.ɵɵelementStart(10, \"option\", 6);\n      i0.ɵɵtext(11, \"DC\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function AddHeroComponent_Template_button_click_12_listener() {\n        return ctx.addHero();\n      });\n      i0.ɵɵtext(13, \"Add Hero\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.alias);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.brandId);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,EAAe,EAAUC,WAAwB;IAAjD,OAAE,GAAFD,EAAE;IAAuB,gBAAW,GAAXC,WAAW;IACtD,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC5BC,IAAI,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,OAAO,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ;KAClC,CAAC;EACJ;EAEAG,QAAQ;IACN,IAAI,IAAI,CAACN,QAAQ,CAACO,KAAK,EAAE;MACvB,MAAMC,QAAQ,GAAG,IAAI,CAACR,QAAQ,CAACS,KAAK;MACpC,IAAI,CAACV,WAAW,CAACW,OAAO,CAACF,QAAQ,CAAC,CAACG,SAAS,CACzCC,EAAE,IAAI;QACLC,OAAO,CAACC,GAAG,CAAC,uBAAuBF,EAAE,EAAE,CAAC;QACxC;MACF,CAAC,EACAG,KAAK,IAAI;QACRF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C,CAAC,CACF;;EAEL;;AAxBWnB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV7BC,4BAAM;MACgBA,qBAAK;MAAAA,iBAAQ;MAC/BA,gCAA2E;MAA9CA;QAAA;MAAA,EAAwB;MAArDA,iBAA2E;MAE3EA,gCAAmB;MAAAA,sBAAM;MAAAA,iBAAQ;MACjCA,gCAAqE;MAAvCA;QAAA;MAAA,EAAyB;MAAvDA,iBAAqE;MAErEA,gCAAmB;MAAAA,sBAAM;MAAAA,iBAAQ;MACjCA,iCAAuE;MAApDA;QAAA;MAAA,EAA2B;MAE5CA,kCAAkB;MAAAA,mBAAE;MAAAA,iBAAS;MAG/BA,kCAA0C;MAApBA;QAAA,OAASC,aAAS;MAAA,EAAC;MAACD,yBAAQ;MAAAA,iBAAS;;;MAX9BA,eAAwB;MAAxBA,wCAAwB;MAGvBA,eAAyB;MAAzBA,yCAAyB;MAGpCA,eAA2B;MAA3BA,2CAA2B","names":["Validators","AddHeroComponent","constructor","fb","heroService","heroForm","group","name","required","alias","brandId","onSubmit","valid","heroData","value","addHero","subscribe","id","console","log","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\19453\\source\\repos\\HeroTest\\ClientApp\\src\\app\\add-hero\\add-hero.component.ts","C:\\Users\\19453\\source\\repos\\HeroTest\\ClientApp\\src\\app\\add-hero\\add-hero.component.html"],"sourcesContent":["// add-hero.component.ts\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-add-hero',\n  templateUrl: './add-hero.component.html',\n  styleUrls: ['./add-hero.component.css'],\n})\nexport class AddHeroComponent {\n  heroForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private heroService: HeroService) {\n    this.heroForm = this.fb.group({\n      name: ['', Validators.required],\n      alias: [''],\n      brandId: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.heroForm.valid) {\n      const heroData = this.heroForm.value;\n      this.heroService.addHero(heroData).subscribe(\n        (id) => {\n          console.log(`Hero added with ID: ${id}`);\n          // Optionally, navigate to the hero list or perform other actions.\n        },\n        (error) => {\n          console.error('Error adding hero:', error);\n        }\n      );\n    }\n  }\n}\n","<form>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" [(ngModel)]=\"model.name\" name=\"name\" required>\n  \n    <label for=\"alias\">Alias:</label>\n    <input type=\"text\" id=\"alias\" [(ngModel)]=\"model.alias\" name=\"alias\">\n  \n    <label for=\"brand\">Brand:</label>\n    <select id=\"brand\" [(ngModel)]=\"model.brandId\" name=\"brandId\" required>\n      <!-- Options for brands, you might want to populate this dynamically -->\n      <option value=\"1\">DC</option>\n    </select>\n  \n    <button type=\"button\" (click)=\"addHero()\">Add Hero</button>\n  </form>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}