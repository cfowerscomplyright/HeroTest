{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../hero.service\";\nexport class AddHeroComponent {\n  constructor(fb, heroService) {\n    this.fb = fb;\n    this.heroService = heroService;\n    this.heroForm = this.fb.group({\n      name: ['', Validators.required],\n      alias: [''],\n      brandId: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.heroForm.valid) {\n      const heroData = this.heroForm.value;\n      this.heroService.addHero(heroData).subscribe(id => {\n        console.log(`Hero added with ID: ${id}`);\n        // Optionally, navigate to the hero list or perform other actions.\n      }, error => {\n        console.error('Error adding hero:', error);\n      });\n    }\n  }\n}\nAddHeroComponent.ɵfac = function AddHeroComponent_Factory(t) {\n  return new (t || AddHeroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HeroService));\n};\nAddHeroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddHeroComponent,\n  selectors: [[\"app-add-hero\"]],\n  decls: 14,\n  vars: 3,\n  consts: [[\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"alias\"], [\"type\", \"text\", \"id\", \"alias\", \"name\", \"alias\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"brand\"], [\"id\", \"brand\", \"name\", \"brandId\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"1\"], [\"type\", \"button\", 3, \"click\"]],\n  template: function AddHeroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"label\", 0);\n      i0.ɵɵtext(2, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function AddHeroComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.model.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Alias:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AddHeroComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.model.alias = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Brand:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"select\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AddHeroComponent_Template_select_ngModelChange_9_listener($event) {\n        return ctx.model.brandId = $event;\n      });\n      i0.ɵɵelementStart(10, \"option\", 6);\n      i0.ɵɵtext(11, \"DC\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function AddHeroComponent_Template_button_click_12_listener() {\n        return ctx.addHero();\n      });\n      i0.ɵɵtext(13, \"Add Hero\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.alias);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.brandId);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}