{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../hero.service\";\nexport class AddHeroComponent {\n  constructor(fb, heroService) {\n    this.fb = fb;\n    this.heroService = heroService;\n    this.heroForm = this.fb.group({\n      name: ['', Validators.required],\n      alias: [''],\n      brandId: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.heroForm.valid) {\n      const heroData = this.heroForm.value;\n      this.heroService.addHero(heroData).subscribe(id => {\n        console.log(`Hero added with ID: ${id}`);\n        // Optionally, navigate to the hero list or perform other actions.\n      }, error => {\n        console.error('Error adding hero:', error);\n      });\n    }\n  }\n}\nAddHeroComponent.ɵfac = function AddHeroComponent_Factory(t) {\n  return new (t || AddHeroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HeroService));\n};\nAddHeroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddHeroComponent,\n  selectors: [[\"app-add-hero\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"alias\"], [\"type\", \"text\", \"id\", \"alias\", \"formControlName\", \"alias\"], [\"for\", \"brandId\"], [\"type\", \"number\", \"id\", \"brandId\", \"formControlName\", \"brandId\"], [\"type\", \"submit\"]],\n  template: function AddHeroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Add Hero\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AddHeroComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\")(5, \"label\", 1);\n      i0.ɵɵtext(6, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\", 3);\n      i0.ɵɵtext(10, \"Alias:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\")(13, \"label\", 5);\n      i0.ɵɵtext(14, \"Brand:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\")(17, \"button\", 7);\n      i0.ɵɵtext(18, \"Add Hero\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.heroForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,EAAe,EAAUC,WAAwB;IAAjD,OAAE,GAAFD,EAAE;IAAuB,gBAAW,GAAXC,WAAW;IACtD,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC5BC,IAAI,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,OAAO,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ;KAClC,CAAC;EACJ;EAEAG,QAAQ;IACN,IAAI,IAAI,CAACN,QAAQ,CAACO,KAAK,EAAE;MACvB,MAAMC,QAAQ,GAAG,IAAI,CAACR,QAAQ,CAACS,KAAK;MACpC,IAAI,CAACV,WAAW,CAACW,OAAO,CAACF,QAAQ,CAAC,CAACG,SAAS,CACzCC,EAAE,IAAI;QACLC,OAAO,CAACC,GAAG,CAAC,uBAAuBF,EAAE,EAAE,CAAC;QACxC;MACF,CAAC,EACAG,KAAK,IAAI;QACRF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C,CAAC,CACF;;EAEL;;AAxBWnB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT7BC,2BAAK;MACCA,wBAAQ;MAAAA,iBAAK;MACjBA,+BAAqD;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAClDD,2BAAK;MACeA,qBAAK;MAAAA,iBAAQ;MAC/BA,2BAAsD;MACxDA,iBAAM;MACNA,2BAAK;MACgBA,uBAAM;MAAAA,iBAAQ;MACjCA,4BAAwD;MAC1DA,iBAAM;MACNA,4BAAK;MACkBA,uBAAM;MAAAA,iBAAQ;MACnCA,4BAA8D;MAChEA,iBAAM;MACNA,4BAAK;MACmBA,yBAAQ;MAAAA,iBAAS;;;MAdrCA,eAAsB;MAAtBA,wCAAsB","names":["Validators","AddHeroComponent","constructor","fb","heroService","heroForm","group","name","required","alias","brandId","onSubmit","valid","heroData","value","addHero","subscribe","id","console","log","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\19453\\source\\repos\\HeroTest\\ClientApp\\src\\app\\add-hero\\add-hero.component.ts","C:\\Users\\19453\\source\\repos\\HeroTest\\ClientApp\\src\\app\\add-hero\\add-hero.component.html"],"sourcesContent":["// add-hero.component.ts\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-add-hero',\n  templateUrl: './add-hero.component.html',\n  styleUrls: ['./add-hero.component.css'],\n})\nexport class AddHeroComponent {\n  heroForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private heroService: HeroService) {\n    this.heroForm = this.fb.group({\n      name: ['', Validators.required],\n      alias: [''],\n      brandId: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.heroForm.valid) {\n      const heroData = this.heroForm.value;\n      this.heroService.addHero(heroData).subscribe(\n        (id) => {\n          console.log(`Hero added with ID: ${id}`);\n          // Optionally, navigate to the hero list or perform other actions.\n        },\n        (error) => {\n          console.error('Error adding hero:', error);\n        }\n      );\n    }\n  }\n}\n","<!-- add-hero.component.html -->\n<div>\n  <h2>Add Hero</h2>\n  <form [formGroup]=\"heroForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" formControlName=\"name\" />\n    </div>\n    <div>\n      <label for=\"alias\">Alias:</label>\n      <input type=\"text\" id=\"alias\" formControlName=\"alias\" />\n    </div>\n    <div>\n      <label for=\"brandId\">Brand:</label>\n      <input type=\"number\" id=\"brandId\" formControlName=\"brandId\" />\n    </div>\n    <div>\n      <button type=\"submit\">Add Hero</button>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}